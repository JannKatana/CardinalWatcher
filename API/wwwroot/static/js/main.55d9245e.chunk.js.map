{"version":3,"sources":["app/api/agent.ts","app/stores/attendanceStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","features/Attendance/Dashboard/AttendanceTableItem.tsx","app/common/form/MySelectInput.tsx","features/Attendance/Dashboard/AttendanceTable.tsx","app/layout/LoadingComponents.tsx","app/common/form/MyTextInput.tsx","app/common/options/monthsOptions.ts","features/Attendance/Dashboard/AttendanceFilters.tsx","features/Attendance/Dashboard/AttendanceDashboard.tsx","features/Attendance/Details/AttendanceDetails.tsx","app/common/form/MyDateInput.tsx","app/common/form/MyTextArea.tsx","features/Attendance/Form/AttendanceForm.tsx","features/Users/ChangePasswordForm.tsx","features/Users/LoginForm.tsx","features/Errors/ValidationErrors.tsx","features/Users/RegisterForm.tsx","features/Home/HomePage.tsx","app/common/modals/ModalContainer.tsx","features/Users/ResetPasswordForm.tsx","app/layout/NavBar.tsx","features/Errors/NotFound.tsx","features/Errors/ServerError.tsx","features/Errors/TestError.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","error","data","status","toast","method","errors","hasOwnProperty","history","push","modalStateError","key","flat","setServerError","Promise","reject","responseBody","url","get","then","agent","Attendances","list","details","id","create","attendance","post","update","put","delete","timeIO","filter","Account","current","login","user","register","resetPassword","changePassword","AttendanceStore","attendanceRegistry","Map","selectedAttendance","undefined","editMode","loading","loadingInitial","getAttendanceByPayrollPeriod","period","Array","from","values","timeIn","getDate","sort","b","getTime","loadAttendances","forEach","setAttendance","setLoadingInitial","console","log","loadAttendance","getAttendance","runInAction","Date","timeOut","set","convertDateToUtc","date","offset","getTimezoneOffset","utcDate","toISOString","setMinutes","getMinutes","state","createAttendance","attendanceInUtc","updateAttendance","deleteAttendance","userStore","isPresent","filterAttendances","clear","makeAutoObservable","this","profile","displayName","localeCompare","Object","entries","attendancesByDateTimeAndEmployee","reduce","attendances","employee","UserStore","creds","setToken","modalStore","closeModal","logout","attendanceStore","window","localStorage","removeItem","getUser","getItem","appLoaded","setAppLoaded","reaction","setItem","modal","open","body","openModal","content","StoreContext","createContext","useStore","useContext","AttendanceTableItem","useState","target","setTarget","Table","Row","Cell","format","textAlign","accomplishments","isSuperUser","Button","as","Link","to","icon","color","name","onClick","e","currentTarget","handleActivityDelete","disabled","MySelectInput","props","useField","field","meta","helpers","FormField","touched","label","Select","options","value","onChange","d","setValue","onBlur","setTouched","placeholder","Label","basic","observer","groupAttendances","isFirstPayrollPeriod","periodOptions","text","getFullYear","getMonth","payrollPeriod","responseType","result","workbook","ExcelJS","xlsx","load","sheet","getWorksheet","getCell","email","department","timeRecords","row","map","record","getHours","writeBuffer","buffer","fileDownload","group","Header","sub","initialValues","onSubmit","getDownload","handleSubmit","isSubmitting","Form","className","autoComplete","Group","tyep","celled","fixed","HeaderCell","Body","LoadingComponent","inverted","Dimmer","active","Loader","MyTextInput","monthsOptions","yearOptions","Segment","vertical","size","style","width","attached","month","year","type","fluid","useEffect","Grid","Column","AttendanceFilters","useParams","Card","Content","Meta","Description","extra","widths","selected","MyTextArea","useHistory","username","image","validationSchema","Yup","required","clearing","enableReinitialize","length","newAttendance","uuid","handleFormSubmit","isValid","dirty","placeholderText","timeInputLabel","showTimeInput","dateFormat","rows","floated","positive","password","setErrors","catch","render","marginBottom","Image","src","marginTop","href","ValidationErrors","Message","List","err","i","Item","firstName","lastName","middleInitial","suffix","Container","alt","isLoggedIn","Modal","onClose","Menu","NavLink","exact","header","marginRight","position","avatar","spaced","Dropdown","pointing","NotFound","Icon","Inline","primary","message","TestErrors","baseUrl","location","useLocation","finally","hideProgressBar","path","component","HomePage","AttendanceDashboard","AttendanceDetails","AttendanceForm","TestError","ServerError","LoginForm","ChangePasswordForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.55d9245e.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Attendance, AttendanceFilter } from '../models/attendance';\r\nimport { store } from '../stores/store';\r\nimport {User, UserFormValues} from '../models/user';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data)\r\n            }\r\n\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n\r\n            if (data.errors) {\r\n                const modalStateError = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateError.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateError.flat();\r\n            }\r\n\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorized');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n        default:\r\n            toast.error('Unexpected Error');\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst request = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Attendances = {\r\n    list: () => request.get<Attendance[]>('/attendances'),\r\n    details: (id: string) => request.get<Attendance>(`/attendances/${id}`),\r\n    create: (attendance: Attendance) => axios.post('/attendances', attendance),\r\n    update: (attendance: Attendance) => axios.put(`/attendances/${attendance.id}`, attendance),\r\n    delete: (id: string) => axios.delete(`/attendances/${id}`),\r\n    timeIO: (attendance: Attendance) => axios.post('/attendances/timeIO', attendance),\r\n    filter: (filter: AttendanceFilter) => axios.post<Attendance[]>('/attendances/filter', filter)\r\n}\r\n\r\nconst Account = {\r\n    current: () => request.get<User>('/account'),\r\n    login: (user: UserFormValues) => axios.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => axios.post<User>('/account/register', user),\r\n    resetPassword: (user: UserFormValues) => axios.post<User>('/account/reset-password', user),\r\n    changePassword: (user: UserFormValues) => axios.post<User>('/account/change-password', user),\r\n}\r\n\r\nconst agent = {\r\n    Attendances,\r\n    Account\r\n}\r\n\r\nexport default agent;","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Attendance, AttendanceFilter } from \"../models/attendance\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class AttendanceStore {\r\n    attendanceRegistry = new Map<string, Attendance>();\r\n    selectedAttendance: Attendance | undefined = undefined;\r\n    editMode: boolean = false;\r\n    loading: boolean = false;\r\n    loadingInitial: boolean = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get attendancesByDateTimeAndEmployee() {\r\n        return Array.from(this.attendanceRegistry.values()).sort((a, b) =>\r\n            b.timeIn.getTime() - a.timeIn.getTime()).sort((a, b) =>\r\n                a.profile?.displayName.localeCompare(b.profile?.displayName));\r\n    }\r\n\r\n    getAttendanceByPayrollPeriod = (period: number) => {\r\n        if (period) {\r\n            return Array.from(this.attendanceRegistry.values()).filter(a => (a.timeIn.getDate() > 15)).sort((a, b) =>\r\n                a.timeIn.getTime() - b.timeIn.getTime());\r\n        }\r\n\r\n        return Array.from(this.attendanceRegistry.values()).filter(a => (a.timeIn.getDate() < 16)).sort((a, b) =>\r\n            a.timeIn.getTime() - b.timeIn.getTime());\r\n    }\r\n\r\n    get groupAttendances() {\r\n        return Object.entries(\r\n            this.attendancesByDateTimeAndEmployee.reduce((attendances, attendance) => {\r\n                const employee = attendance.profile?.displayName;\r\n                attendances[employee] = attendances[employee] ? [...attendances[employee], attendance] : [attendance];\r\n                return attendances;\r\n            }, {} as { [key: string]: Attendance[] })\r\n        )\r\n    }\r\n\r\n    loadAttendances = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const attendances = await agent.Attendances.list();\r\n\r\n            attendances.forEach(attendance => {\r\n                this.setAttendance(attendance);\r\n            });\r\n            this.setLoadingInitial(false);\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    loadAttendance = async (id: string) => {\r\n        let attendance = this.getAttendance(id);\r\n\r\n        if (attendance) {\r\n            this.selectedAttendance = attendance;\r\n            return attendance;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                attendance = await agent.Attendances.details(id);\r\n                this.setAttendance(attendance);\r\n                runInAction(() => {\r\n                    this.selectedAttendance = attendance;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return attendance;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setAttendance = (attendance: Attendance) => {\r\n        attendance.timeIn = new Date(attendance.timeIn);\r\n        if (attendance.timeOut !== null) {\r\n            attendance.timeOut = new Date(attendance.timeOut);\r\n        }\r\n\r\n        this.attendanceRegistry.set(attendance.id, attendance);\r\n    }\r\n\r\n    private getAttendance = (id: string) => {\r\n        return this.attendanceRegistry.get(id);\r\n    }\r\n\r\n    private convertDateToUtc = (date: Date) => {\r\n        const offset = new Date().getTimezoneOffset()\r\n        const utcDate = new Date(date.toISOString());\r\n        utcDate.setMinutes(date.getMinutes() - offset);\r\n        return utcDate;\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createAttendance = async (attendance: Attendance) => {\r\n        this.loading = true;\r\n        const attendanceInUtc = {\r\n            ...attendance,\r\n            timeIn: this.convertDateToUtc(attendance.timeIn),\r\n            timeOut: attendance.timeOut ? this.convertDateToUtc(attendance.timeOut) : null\r\n        }\r\n\r\n        try {\r\n            await agent.Attendances.create(attendanceInUtc);\r\n            runInAction(() => {\r\n                this.attendanceRegistry.set(attendance.id, attendance);\r\n                this.selectedAttendance = attendance;\r\n                this.editMode = false;\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async (attendance: Attendance) => {\r\n        this.loading = true;\r\n        const attendanceInUtc = {\r\n            ...attendance,\r\n            timeIn: this.convertDateToUtc(attendance.timeIn),\r\n            timeOut: attendance.timeOut ? this.convertDateToUtc(attendance.timeOut) : null\r\n        }\r\n        try {\r\n            await agent.Attendances.update(attendanceInUtc);\r\n            runInAction(() => {\r\n                this.attendanceRegistry.set(attendance.id, attendance);\r\n                this.selectedAttendance = attendance;\r\n                this.editMode = false;\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteAttendance = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Attendances.delete(id);\r\n            runInAction(() => {\r\n                this.attendanceRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.selectedAttendance = undefined;\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    timeIO = async (attendance: Attendance) => {\r\n        this.loading = true;\r\n        \r\n        try {\r\n            await agent.Attendances.timeIO(attendance);\r\n            runInAction(() => {\r\n                this.attendanceRegistry.set(attendance.id, attendance);\r\n                this.selectedAttendance = attendance;\r\n                store.userStore.user!.isPresent = !store.userStore.user?.isPresent;\r\n                this.editMode = false;\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    filterAttendances = async (filter: AttendanceFilter) => {\r\n        this.loading = true;\r\n        try {\r\n            console.log(this.attendanceRegistry);\r\n            this.attendanceRegistry.clear();\r\n            console.log(this.attendanceRegistry);\r\n            const attendances = await agent.Attendances.filter(filter);\r\n\r\n            attendances.data.forEach(attendance => {\r\n                this.setAttendance(attendance);\r\n\r\n                this.loading = false;\r\n            });\r\n            console.log(this.attendanceRegistry);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.loading = false;\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport agent from \"../api/agent\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.data.token);\r\n            runInAction(() => this.user = user.data);\r\n            history.push('/attendances');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        store.attendanceStore.attendanceRegistry.clear();\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.data.token);\r\n            runInAction(() => this.user = user.data);\r\n            history.push('/attendances');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    resetPassword = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.resetPassword(creds);\r\n            runInAction(() => console.log(user));\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    changePassword = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.changePassword(creds);\r\n            runInAction(() => console.log(user));\r\n            history.push('/attendances');\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport AttendanceStore from \"./attendanceStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ModalStore from \"./modalStore\";\r\n\r\ninterface Store {\r\n    attendanceStore: AttendanceStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    attendanceStore: new AttendanceStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}\r\n\r\n","import { makeAutoObservable, reaction } from 'mobx';\r\nimport { ServerError } from '../models/serverError';\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import {makeAutoObservable} from 'mobx';\r\n\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { SyntheticEvent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Table } from 'semantic-ui-react';\r\nimport { Attendance } from '../../../app/models/attendance';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { format } from 'date-fns';\r\n\r\ninterface Props {\r\n    attendance: Attendance\r\n}\r\n\r\nexport default function AttendanceTableItem({ attendance }: Props) {\r\n    const { attendanceStore, userStore: { user } } = useStore();\r\n    const { deleteAttendance, loading } = attendanceStore;\r\n    const [target, setTarget] = useState('');\r\n\r\n    function handleActivityDelete(e: SyntheticEvent<HTMLButtonElement>, id: string) {\r\n        setTarget(e.currentTarget.name);\r\n        deleteAttendance(id);\r\n    }\r\n\r\n    return (\r\n        <Table.Row key={attendance.id}>\r\n            <Table.Cell>\r\n                {format(attendance.timeIn, 'dd MMM yyyy, EEEE')}\r\n            </Table.Cell>\r\n            <Table.Cell textAlign='center'>\r\n                {format(attendance.timeIn, 'h:mm:ss aa')}\r\n            </Table.Cell>\r\n            <Table.Cell textAlign='center'>\r\n                {attendance.timeOut ? format(attendance.timeOut, 'dd MMM yyyy, EEEE h:mm:ss aa') : ''}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {attendance.accomplishments}\r\n            </Table.Cell>\r\n            <Table.Cell textAlign='center'>\r\n                {!!attendance.timeIn && !!attendance.timeOut || user?.isSuperUser ?\r\n                    <Button as={Link} to={`attendances/${attendance.id}`} icon='eye' color='blue' />\r\n                    : <Button as={Link} to={`/manage/${attendance.id}`} color='red' content='Time Out' />}\r\n\r\n                {user?.isSuperUser && <Button\r\n                    name={attendance.id}\r\n                    loading={loading && target === attendance.id}\r\n                    onClick={(e) => handleActivityDelete(e, attendance.id)}\r\n                    icon='cancel'\r\n                    color='red'\r\n                    disabled\r\n                />}\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { FormField, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name);\r\n    return (\r\n        <FormField error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select \r\n                options={props.options}\r\n                value={field.value}\r\n                onChange={(e, d) => helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n             />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </FormField>\r\n    )\r\n}","import axios from 'axios';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Fragment, useState } from 'react';\r\nimport { Button, Form, Grid, Header, Table } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport AttendanceTableItem from './AttendanceTableItem'\r\nimport fileDownload from 'js-file-download';\r\nimport * as ExcelJS from 'exceljs';\r\nimport { format } from 'date-fns';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { Formik } from 'formik';\r\n\r\nexport default observer(function AttendanceTable() {\r\n\r\n    const { attendanceStore, userStore: { user } } = useStore();\r\n    const { groupAttendances } = attendanceStore;\r\n\r\n    const dateNow = new Date();\r\n    const isFirstPayrollPeriod = dateNow.getDate() < 15;\r\n    const periodOptions = [\r\n        { text: `${format(new Date(), 'MMMM')} 1 - 15`, value: 0 },\r\n        { text: `${format(new Date(), 'MMMM')} 16 - ${GetEndDayOfTheMonth(new Date()).getDate()}`, value: 1 },\r\n    ]\r\n\r\n    async function getDownload(payrollPeriod: any) {\r\n        console.log(payrollPeriod);\r\n        const result = await axios.get('/attendances/download', { responseType: 'blob' });\r\n        const workbook = new ExcelJS.Workbook();\r\n        await workbook.xlsx.load(result.data);\r\n\r\n        const sheet = workbook.getWorksheet('Sheet1');\r\n        sheet.getCell('B4').value = `${user?.displayName} (${user?.email})`;\r\n        sheet.getCell('B5').value = user?.department;\r\n\r\n        sheet.getCell('B6').value = payrollPeriod.text;\r\n        const timeRecords = attendanceStore.getAttendanceByPayrollPeriod(payrollPeriod.value)\r\n\r\n        let row = 10;\r\n        timeRecords.map(record => {\r\n            sheet.getCell(`A${row}`).value = format(record.timeIn, 'dd MMM yyyy, EEEE');\r\n            sheet.getCell(`B${row}`).value = format(record.timeIn, 'h:mm:ss aa');\r\n            sheet.getCell(`C${row}`).value = format(record.timeOut!, 'dd MMM yyyy, EEEE h:mm:ss aa');\r\n            sheet.getCell(`D${row}`).value = record.timeOut!.getHours() - record.timeIn.getHours();\r\n            sheet.getCell(`G${row}`).value = record.accomplishments;\r\n            row += 1;\r\n        });\r\n\r\n        const buffer = await workbook.xlsx.writeBuffer();\r\n        fileDownload(buffer, user?.displayName! + ' ' + payrollPeriod.text + '.xlsx');\r\n\r\n    }\r\n\r\n    function GetEndDayOfTheMonth(date: Date) {\r\n        const d = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n\r\n        return d;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {groupAttendances.map(([group, attendances]) => (\r\n                <Fragment key={group}>\r\n                    <Header sub color='red'>\r\n                        {group}\r\n                    </Header>\r\n                    { !user?.isSuperUser &&\r\n                        <Formik\r\n                        initialValues={{ payrollPeriod: isFirstPayrollPeriod ? 0 : 1}}\r\n                        onSubmit={(values) => getDownload(periodOptions[values.payrollPeriod])}\r\n                        >\r\n                            {({ handleSubmit, isSubmitting }) => (\r\n                                <>\r\n                                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                                        <Form.Group>\r\n                                            <MySelectInput options={periodOptions} placeholder='Payroll Period' name='payrollPeriod' />\r\n                                            <Button loading={isSubmitting} color='orange' content='Download' tyep='submit' />\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </>\r\n                            )}\r\n                        </Formik>\r\n                    }\r\n                    <Table celled fixed>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Day</Table.HeaderCell>\r\n                                <Table.HeaderCell>Time In</Table.HeaderCell>\r\n                                <Table.HeaderCell>Time Out</Table.HeaderCell>\r\n                                <Table.HeaderCell>Accomplishments</Table.HeaderCell>\r\n                                <Table.HeaderCell>\r\n\r\n                                </Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n\r\n                            {attendances.map(attendance => (\r\n                                <AttendanceTableItem key={attendance.id} attendance={attendance} />\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </Fragment>\r\n            ))}\r\n        </>\r\n    )\r\n})","import React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\nexport default function LoadingComponent({ inverted = true, content = 'Loading...' }: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { FormField, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <FormField error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </FormField>\r\n    )\r\n}","export const monthsOptions = [\r\n    {text: 'January', value: 1},\r\n    {text: 'Febuary', value: 2},\r\n    {text: 'March', value: 3},\r\n    {text: 'April', value: 4},\r\n    {text: 'May', value: 5},\r\n    {text: 'June', value: 6},\r\n    {text: 'July', value: 7},\r\n    {text: 'August', value: 8},\r\n    {text: 'September', value: 9},\r\n    {text: 'October', value: 10},\r\n    {text: 'November', value: 11},\r\n    {text: 'December', value: 12},\r\n]\r\n\r\nexport const yearOptions = [\r\n    {text: '2021', value: 2021},\r\n    {text: '2022', value: 2022},\r\n    {text: '2023', value: 2023},\r\n    {text: '2024', value: 2024},\r\n    {text: '2025', value: 2025},\r\n    {text: '2026', value: 2026},\r\n    {text: '2027', value: 2027},\r\n    {text: '2028', value: 2028},\r\n    {text: '2029', value: 2029},\r\n    {text: '2030', value: 2030},\r\n]","import { Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Button, Dropdown, Header, Menu, Segment } from 'semantic-ui-react';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport { monthsOptions, yearOptions } from '../../../app/common/options/monthsOptions';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nexport default observer(function ActivityFilters() {\r\n    const { userStore ,attendanceStore } = useStore();\r\n    return (\r\n        <>\r\n            <Segment vertical size='large' style={{ width: '100%'}}>\r\n                <Header icon='filter' attached color='orange' content='Filter' />\r\n\r\n                <Formik\r\n                    initialValues={{ email: userStore.user!.email, month: new Date().getMonth() + 1, year: new Date().getFullYear() }}\r\n                    onSubmit={(values) => attendanceStore.filterAttendances(values)}\r\n                >\r\n                    {({ handleSubmit, isSubmitting }) => (\r\n                        <>\r\n                            <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                                {userStore.user?.isSuperUser && <MyTextInput name='email' placeholder='Email' />}\r\n                                <MySelectInput options={monthsOptions} placeholder='month' name='month' />\r\n                                <MySelectInput options={yearOptions} placeholder='year' name='year' />\r\n                                <Button loading={isSubmitting} color='orange' content='Filter' type='submit' fluid />\r\n                            </Form>\r\n                        </>\r\n                    )}\r\n                </Formik>\r\n            </Segment>\r\n            <Header />\r\n            <Calendar />\r\n        </>\r\n    )\r\n})","import React, { useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport AttendanceTable from './AttendanceTable';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { observer } from 'mobx-react-lite';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport AttendanceFilters from './AttendanceFilters';\r\n\r\nexport default observer(function AttendanceDashboard() {\r\n    const { attendanceStore } = useStore();\r\n    const { loadAttendances, attendanceRegistry } = attendanceStore;\r\n\r\n    useEffect(() => {\r\n        console.log(attendanceRegistry.size)\r\n        if (attendanceRegistry.size === 0) loadAttendances();\r\n    }, [loadAttendances]);\r\n\r\n    if (attendanceStore.loadingInitial) return <LoadingComponent content='Loading attendances...' />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                <AttendanceTable />\r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <AttendanceFilters/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Button, Card, Table } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\n\r\nexport default observer(function AttendanceDetails() {\r\n    const { attendanceStore } = useStore();\r\n    const { selectedAttendance: attendance, loadAttendance, loadingInitial } = attendanceStore;\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n\r\n    useEffect(() => {\r\n        if (id) loadAttendance(id);\r\n    }, [id, loadAttendance]);\r\n\r\n    if (loadingInitial || !attendance) return <LoadingComponent />;\r\n\r\n    return (\r\n        <Card fluid>\r\n            <Card.Content>\r\n                <Card.Header>{attendance.profile!.displayName}</Card.Header>\r\n                <Card.Meta>Department</Card.Meta>\r\n                <Card.Description>\r\n                    <Table celled>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Day</Table.HeaderCell>\r\n                                <Table.HeaderCell>In</Table.HeaderCell>\r\n                                <Table.HeaderCell>Out</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell>\r\n                                    {format(attendance.timeIn, 'dd MMM yyyy, EEEE')}\r\n                                </Table.Cell>\r\n                                <Table.Cell textAlign='center'>\r\n                                    {format(attendance.timeIn, 'h:mm:ss aa')}\r\n                                </Table.Cell>\r\n                                <Table.Cell textAlign='center'>\r\n                                    {attendance.timeOut ? format(attendance.timeOut, 'dd MMM yyyy, EEEE h:mm:ss aa') : ''}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                </Card.Description>\r\n                <h3>Accomplishments</h3>\r\n                {attendance.accomplishments}\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button.Group widths='2'>\r\n                    <Button as={Link} to={`/manage/${attendance.id}`} basic color='blue' content='Edit' />\r\n                    <Button as={Link} to='/attendances' basic color='grey' content='Cancel' />\r\n                </Button.Group>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n})","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { FormField, Label } from 'semantic-ui-react';\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\nimport { useStore } from '../../stores/store';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport default observer(function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n    const { userStore: { user } } = useStore();\r\n    return (\r\n        <FormField error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n                {...field}\r\n                {...props}\r\n                disabled={!user?.isSuperUser}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </FormField>\r\n    )\r\n})","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { FormField, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <FormField error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </FormField>\r\n    )\r\n}","import React from 'react'\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport { Attendance } from '../../../app/models/attendance';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form, } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\n\r\n\r\n\r\nexport default observer(function AttendanceForm() {\r\n    const history = useHistory();\r\n    const { attendanceStore } = useStore();\r\n    const { createAttendance, updateAttendance, timeIO, loading, loadAttendance, loadingInitial } = attendanceStore;\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const [attendance, setAttendance] = useState<Attendance>({\r\n        id: '',\r\n        timeIn: new Date(),\r\n        timeOut: null,\r\n        accomplishments: '',\r\n        profile: { username: '', displayName: '', image: '' }\r\n    });\r\n\r\n    const validationSchema = Yup.object({\r\n        timeIn: Yup.string().required(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) loadAttendance(id).then(attendance => {\r\n            setAttendance({\r\n                id: attendance!.id,\r\n                timeIn: attendance!.timeIn,\r\n                timeOut: attendance!.timeOut ?? null,\r\n                accomplishments: attendance!.accomplishments,\r\n                profile: attendance!.profile\r\n            })\r\n        });\r\n    }, [id, loadAttendance]);\r\n\r\n\r\n    function handleFormSubmit(attendance: Attendance) {\r\n\r\n        if (!!attendance.timeIn && !!attendance.timeOut) {\r\n            if (attendance.id.length === 0) {\r\n                let newAttendance = {\r\n                    ...attendance,\r\n                    id: uuid()\r\n                };\r\n                createAttendance(newAttendance).then(() => history.push(`/attendances/${newAttendance.id}`));\r\n            } else {\r\n                updateAttendance(attendance).then(() => history.push(`/attendances/${attendance.id}`));\r\n            }\r\n        }\r\n        else {\r\n            if (attendance.id.length === 0) {\r\n                attendance.id = uuid();\r\n            } else {\r\n                attendance.timeOut = new Date();\r\n            }\r\n            timeIO(attendance).then(() => history.push(`/attendances/${attendance.id}`));\r\n        }\r\n    }\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading attendance...' />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header as='h2'>\r\n                {attendance.profile!.displayName}\r\n            </Header>\r\n            <Header content='Attendance Details' sub color='red' />\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={attendance}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <label>Time In</label>\r\n                        <MyDateInput\r\n                            placeholderText='Time In'\r\n                            name='timeIn'\r\n                            timeInputLabel=\"Time In:\"\r\n                            showTimeInput\r\n                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        />\r\n\r\n                        <label>Time Out</label>\r\n                        <MyDateInput\r\n                            placeholderText='Time Out'\r\n                            name='timeOut'\r\n                            timeInputLabel=\"Time Out:\"\r\n                            showTimeInput\r\n                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        />\r\n                        <label>Accomplishments</label>\r\n                        <MyTextArea rows={3} placeholder='Accomplishments' name='accomplishments' />\r\n                        <Button\r\n                            disabled={isSubmitting || !isValid}\r\n                            loading={loading}\r\n                            floated='right'\r\n                            positive type='submit'\r\n                            content='Submit'\r\n                        />\r\n                        <Button as={Link} to='/attendances' floated='right' type='button' content='Cancel' />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n        </Segment>\r\n    );\r\n})","import React from 'react';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { Button, Container, Header, Image, Label } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport ValidationErrors from '../Errors/ValidationErrors';\r\n\r\n\r\n\r\nexport default observer(function RegisterForm() {\r\n    const { userStore } = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '', password: '', error: null,\r\n            }}\r\n            onSubmit={(values, { setErrors }) => userStore.changePassword(values).catch(error =>\r\n                setErrors({ error: 'Invalid email or password' }))}\r\n            validationSchema={Yup.object({\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                <>\r\n\r\n                    <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='email' placeholder='Email' />\r\n                        <MyTextInput name='password' placeholder='Password' type='password' />\r\n                        <ErrorMessage\r\n                            name='error' render={() => <Label style={{ marginBottom: 10 }} basic color='red' content={errors.error} />}\r\n                        />\r\n                        <Button disabled={!isValid || !dirty || isSubmitting}\r\n                            loading={isSubmitting} color='orange' content='Change Password' type='submit' fluid />\r\n\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from 'react';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { Button, Header, Image, Label } from 'semantic-ui-react';\r\n\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\n\r\nexport default observer(function LoginForm() {\r\n    const { userStore } = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', error: null }}\r\n            onSubmit={(values, { setErrors }) => userStore.login(values).catch(error =>\r\n                setErrors({ error: 'Invalid email or password' }))}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors }) => (\r\n                <>\r\n                    <Header as='h2' color='orange' textAlign='center'>\r\n                        <Image src='/assets/logo.png' /> Login to your account\r\n                    </Header>\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='email' placeholder='Email' />\r\n                        <MyTextInput name='password' placeholder='Password' type='password' />\r\n                        <ErrorMessage\r\n                            name='error' render={() => <Label style={{ marginBottom: 10 }} basic color='red' content={errors.error} />}\r\n                        />\r\n                        <Button loading={isSubmitting} color='orange' content='Login' type='submit' fluid />\r\n\r\n                    </Form>\r\n                    <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n                        <a href='/forgot-password'>Forgot password?</a>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import React from 'react';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { Button, Header, Image } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport ValidationErrors from '../Errors/ValidationErrors';\r\n\r\n\r\n\r\nexport default observer(function RegisterForm() {\r\n    const { userStore } = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                username: '', email: '', password: '', error: null,\r\n                firstName: '', lastName: '', middleInitial: '', suffix: '', department: ''\r\n            }}\r\n            onSubmit={(values, { setErrors }) => userStore.register(values).catch(error =>\r\n                setErrors({ error }))}\r\n            validationSchema={Yup.object({\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n                firstName: Yup.string().required(),\r\n                middleInitial: Yup.string().required(),\r\n                lastName: Yup.string().required(),\r\n                department: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                <>\r\n                    <Header as='h2' color='orange' textAlign='center'>\r\n                        <Image src='/assets/logo.png' /> Sign up to Cardinal Watcher\r\n                    </Header>\r\n                    <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='firstName' placeholder='First Name' />\r\n                        <MyTextInput name='middleInitial' placeholder='Middle Initial' />\r\n                        <MyTextInput name='lastName' placeholder='Last Name' />\r\n                        <MyTextInput name='suffix' placeholder='Suffix (ex. Jr)' />\r\n                        <MyTextInput name='department' placeholder='Department' />\r\n                        <MyTextInput name='username' placeholder='Username' />\r\n                        <MyTextInput name='email' placeholder='Email' />\r\n                        <MyTextInput name='password' placeholder='Password' type='password' />\r\n                        <ErrorMessage\r\n                            name='error' render={() => <ValidationErrors errors={errors.error}/>}\r\n                        />\r\n                        <Button disabled={!isValid || !dirty || isSubmitting}\r\n                            loading={isSubmitting} color='orange' content='Register' type='submit' fluid />\r\n\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Header, Image, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../Users/LoginForm';\r\nimport RegisterForm from '../Users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n    const { userStore, modalStore } = useStore();\r\n\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text >\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\r\n                    Cardinal Watcher\r\n                </Header>\r\n                <Header as='h3' inverted>\r\n                    <i>\"It's just another time keeping app.\"</i>\r\n                </Header>\r\n                <br />\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content={`Welcome ${userStore.user?.displayName}!`} />\r\n                        <Button as={Link} to='/attendances' size='huge' inverted>\r\n                            Go to Attendances\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                            Login!\r\n                        </Button>\r\n\r\n\r\n                        <Button onClick={() => modalStore.openModal(<RegisterForm/>)} size='huge' inverted>\r\n                            Register!\r\n                        </Button>\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import React from 'react';\r\nimport { useStore } from '../../stores/store';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Modal } from 'semantic-ui-react';\r\n\r\n\r\nexport default observer(function ModalContainer() {\r\n    const { modalStore } = useStore();\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import React from 'react';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { Button, Header, Image, Label } from 'semantic-ui-react';\r\n\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\n\r\nexport default observer(function ResetPasswordForm() {\r\n    const { userStore } = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', error: null }}\r\n            onSubmit={(values, { setErrors }) => userStore.resetPassword(values).catch(error =>\r\n                setErrors({ error: 'Invalid email or password' }))}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors }) => (\r\n                <>\r\n                    <Header as='h2' color='orange' textAlign='center'>\r\n                        <Image src='/assets/logo.png' /> Enter email to reset password.\r\n                    </Header>\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='email' placeholder='Email' />\r\n                        <ErrorMessage\r\n                            name='error' render={() => <Label style={{ marginBottom: 10 }} basic color='red' content={errors.error} />}\r\n                        />\r\n                        <Button loading={isSubmitting} color='orange' content='Reset Password' type='submit' fluid />\r\n\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\nimport ResetPasswordForm from '../../features/Users/ResetPasswordForm';\r\n\r\nexport default observer(function NavBar() {\r\n    const { userStore: { user, logout }, modalStore } = useStore();\r\n\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: '10px' }} />\r\n                    Just Another Timekeeping App\r\n                </Menu.Item>\r\n\r\n                <Menu.Item as={NavLink} to='/attendances' name='attendances' />\r\n                {user!.isSuperUser && <Menu.Item as={NavLink} to='/errors' name='Errors' />}\r\n                {!(user!.isSuperUser) && !(user?.isPresent) &&\r\n                    <Menu.Item>\r\n                        <Button as={NavLink} to='/createAttendance' positive content='Create Attendance' />\r\n                    </Menu.Item>\r\n                }\r\n                {user!.isSuperUser &&\r\n                    <Menu.Item>\r\n                        <Button onClick={() => modalStore.openModal(<ResetPasswordForm />)} positive>\r\n                            Reset Password\r\n                        </Button>\r\n                    </Menu.Item>\r\n                }\r\n                <Menu.Item position='right'>\r\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n                    <Dropdown pointing='top left' text={user?.displayName}>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={Link} to={'/change-password'} text='Change Password' icon='user' />\r\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/attendances' primary>\r\n                    Return to attendances page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ServerError() {\r\n    const { commonStore } = useStore();\r\n\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='orange' />\r\n                    <code style={{ marginTop: '10px' }}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import React, { useState } from 'react';\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n    const [errors, setErrors] = useState(null)\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'attendances/notaguid').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'attendances', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { useStore } from '../stores/store';\n\nimport AttendanceDashboard from '../../features/Attendance/Dashboard/AttendanceDashboard';\nimport AttendanceDetails from '../../features/Attendance/Details/AttendanceDetails';\nimport AttendanceForm from '../../features/Attendance/Form/AttendanceForm';\nimport ChangePasswordForm from '../../features/Users/ChangePasswordForm';\nimport HomePage from '../../features/Home/HomePage';\nimport LoginForm from '../../features/Users/LoginForm';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport NavBar from '../layout/NavBar';\nimport NotFound from '../../features/Errors/NotFound';\nimport ServerError from '../../features/Errors/ServerError';\nimport TestError from '../../features/Errors/TestError';\nimport LoadingComponent from './LoadingComponents';\n\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading App...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <Route exact path='/attendances' component={AttendanceDashboard} />\n                <Route exact path='/attendances/:id' component={AttendanceDetails} />\n                <Route key={location.key} exact path={['/createAttendance', '/manage/:id']} component={AttendanceForm} />\n                <Route exact path='/errors' component={TestError} />\n                <Route exact path='/server-error' component={ServerError} />\n                <Route exact path='/login' component={LoginForm} />\n                <Route exact path='/change-password' component={ChangePasswordForm} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store'\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}